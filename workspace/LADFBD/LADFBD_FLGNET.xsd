<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v3" targetNamespace="http://www.siemens.com/automation/Openness/SW/NetworkSource/FlgNet/v3">

    <xs:complexType name="FB_FlgNet_T">
        <xs:sequence>
            <xs:element name="Labels" type="Labels_T" minOccurs="0" maxOccurs="1"/>
            <xs:element name="Parts" type="Parts_T" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Wires" type="Wires_T" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Simple Type Definitions -->
    <xs:simpleType name="VersionString_T">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9]+(.[0-9]+){0,3}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TemplateValueType_T">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Cardinality"/>
            <xs:enumeration value="Type"/>
            <xs:enumeration value="Operation"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Lang_T">
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-zA-Z]{2}-[a-zA-Z]{2}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Scope_TE">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Undef">
                <xs:annotation>
                    <xs:documentation>Symbols we do not know what they are</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GlobalConstant"/>
            <xs:enumeration value="LocalConstant"/>
            <xs:enumeration value="GlobalVariable"/>
            <xs:enumeration value="LocalVariable"/>
            <xs:enumeration value="Instruction"/>
            <xs:enumeration value="Label"/>
            <xs:enumeration value="TypedConstant"/>
            <xs:enumeration value="AddressConstant"/>
            <xs:enumeration value="LiteralConstant"/>
            <xs:enumeration value="AlarmConstant"/>
            <xs:enumeration value="Address"/>
            <xs:enumeration value="Statusword"/>
            <xs:enumeration value="Expression"/>
            <xs:enumeration value="Unnamed"/>
            <xs:enumeration value="Call"/>
            <xs:enumeration value="CallWithType"/>
            <xs:enumeration value="UserType"/>
            <xs:enumeration value="SystemType"/>
            <xs:enumeration value="Reference"/>
            <xs:enumeration value="PredefinedVariable"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="StatuswordCombination_TE">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BR"/>
            <xs:enumeration value="OV"/>
            <xs:enumeration value="OS"/>
            <xs:enumeration value="EQ"/>
            <xs:enumeration value="NE"/>
            <xs:enumeration value="GT"/>
            <xs:enumeration value="LT"/>
            <xs:enumeration value="GE"/>
            <xs:enumeration value="LE"/>
            <xs:enumeration value="UO"/>
            <xs:enumeration value="NU"/>
            <xs:enumeration value="STW"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SliceAccessModifier_T">
        <xs:restriction base="xs:string">
            <xs:pattern value="([xbwdXBWD]\d+)|undef"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SimpleAccessModifier_T">
        <xs:restriction base="xs:string">
            <xs:pattern value="None|((Periphery|QualityInformation)(,\s*)?)*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="AccessModifier_TE">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Array"/>
            <xs:enumeration value="Reference"/>
            <xs:enumeration value="ReferenceToArray"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Area_TE">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="PeripheryInput"/>
            <xs:enumeration value="PeripheryOutput"/>
            <xs:enumeration value="Input"/>
            <xs:enumeration value="Output"/>
            <xs:enumeration value="Memory"/>
            <xs:enumeration value="FB"/>
            <xs:enumeration value="FC"/>
            <xs:enumeration value="DB">
                <xs:annotation>
                    <xs:documentation>partly qualified access with DB register</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DI">
                <xs:annotation>
                    <xs:documentation>partly qualified access with DI register</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Timer"/>
            <xs:enumeration value="Counter"/>
            <xs:enumeration value="Local">
                <xs:annotation>
                    <xs:documentation>Classic Local Stack</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SectionName_TE">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Input"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="Output"/>
            <xs:enumeration value="InOut"/>
            <xs:enumeration value="Static"/>
            <xs:enumeration value="Temp"/>
            <xs:enumeration value="Constant"/>
            <xs:enumeration value="Base"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="BlockType_TE">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DB"/>
            <xs:enumeration value="FB"/>
            <xs:enumeration value="FC"/>
            <xs:enumeration value="OB"/>
            <xs:enumeration value="UDT"/>
            <xs:enumeration value="FBT"/>
            <xs:enumeration value="FCT"/>
        </xs:restriction>
    </xs:simpleType>


    <!-- Complex Types Definition -->
    <xs:complexType name="Labels_T">
        <xs:sequence>
            <xs:element name="LabelDeclaration" type="LabelDeclaration_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>LabelDeclaration represents a single label declaration.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="LabelDeclaration_T">
        <xs:annotation>
            <xs:documentation>TODO because have not found an implementation yet</xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="Parts_T">
        <xs:annotation>
            <xs:documentation>Parts represents a collection of parts.</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Access" type="Access_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Access represents a single access.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Part" type="Part_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Part represents a single part.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Call" type="Call_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Call represents a single call.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="Access_T">
        <xs:annotation>
            <xs:documentation>Access represents a single access element for variables and constants</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element name="Constant" type="AccessConstant_T" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Constant represents a single constant.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Statusword" type="AccessStatusword_T" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Statusword represents a single statusword.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Symbol" type="AccessSymbol_T">
                    <xs:annotation>
                        <xs:documentation>Symbol represents a single symbol.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Address" type="AccessAddress_T">
                    <xs:annotation>
                        <xs:documentation>Address represents a single address for absolute addresses.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="DataType" type="AccessDataType_T">
                    <xs:annotation>
                        <xs:documentation>DataType represents a single datatype.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Reference" type="AccessReference_T">
                    <xs:annotation>
                        <xs:documentation>Reference represents a single reference.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:choice minOccurs="0">
                <xs:element name="Comment" type="Comment_T"/>
                <xs:element name="Blank" type="Blank_T"/>
                <xs:element name="NewLine" type="NewLine_T"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="Scope" type="Scope_TE" use="required">
            <xs:annotation>
                <xs:documentation>Scope represents the scope of the access.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="UId" type="xs:int" use="optional"/>
    </xs:complexType>

    <xs:complexType name="AccessConstant_T">
        <xs:annotation>
            <xs:documentation>
                Constant represents a single constant.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="ConstantType" type="ConstantType_T" minOccurs="0"/>
            <xs:element name="ConstantValue" type="ConstantValue_T" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="UId" type="xs:int" use="optional"/>
        <xs:attribute name="Name" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Name represents the name of the constant.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ConstantType_T">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="UId" type="xs:int" use="optional"/>
                <xs:attribute name="Informative" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="ConstantValue_T">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="UId" type="xs:int" use="optional"/>
                <xs:attribute name="Informative" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="AccessStatusword_T">
        <xs:annotation>
            <xs:documentation>
                Only for S7-300/400/WinAC
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="Combination" type="StatuswordCombination_TE" use="required">
            <xs:annotation>
                <xs:documentation>Combination represents the combination of the statusword.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="AccessSymbol_T">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="Component" type="Component_T"/>
            <xs:element name="Address" type="AccessAddress_T"/>
            <xs:element name="AbsoluteOffset" type="AbsoluteOffset_T"/>
            <xs:element name="Access" type="Access_T"/>
            <xs:choice minOccurs="0">
                <xs:element name="Comment" type="Comment_T"/>
                <xs:element name="Blank" type="Blank_T"/>
                <xs:element name="NewLine" type="NewLine_T"/>
            </xs:choice>
        </xs:choice>
        <xs:attribute name="UId" type="xs:int" use="optional">
            <xs:annotation>
                <xs:documentation>Not allowed in STL</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Scope" type="Scope_TE"/>
    </xs:complexType>

    <xs:complexType name="Component_T">
        <xs:annotation>
            <xs:documentation>
                Component represents a single component.
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Access" type="Access_T"/>
        </xs:choice>
        <xs:attribute name="UId" type="xs:int" use="optional"/>
        <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Name represents the name of the component.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="SliceAccessModifier" type="SliceAccessModifier_T" default="undef"/>
        <xs:attribute name="SimpleAccessModifier" type="SimpleAccessModifier_T" default="None"/>
        <xs:attribute name="AccessModifier" type="AccessModifier_TE" default="None">
            <xs:annotation>
                <xs:documentation>If component has child AccessModifier is Array else AccessModifier is None</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="AccessAddress_T">
        <xs:attribute name="UId" type="xs:int" use="optional"/>
        <xs:attribute name="Area" type="Area_TE" use="required">
            <xs:annotation>
                <xs:documentation>Area represents the area of the address.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Type represents the type of the address.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="BlockNumber" type="xs:int" use="optional">
            <xs:annotation>
                <xs:documentation>BlockNumber represents the block number of the address for DB access.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="BitOffset" type="xs:int" use="optional">
            <xs:annotation>
                <xs:documentation>In general it is Byte * 8 + Bit. But if it is used for addressing a DB we will find the number of the DB here (e.g. "DB12" ->12).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="AbsoluteOffset_T">
        <xs:attribute name="BitOffset" type="xs:int" use="required">
            <xs:annotation>
                <xs:documentation>Byte * 8 + Bit</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Type" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="AccessDataType_T">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="Informative" type="xs:boolean" use="optional"/>
                <xs:attribute name="UId" type="xs:int" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="AccessReference_T">
        <xs:sequence>
            <xs:element name="Access" type="Access_T"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Blank_T">
        <xs:attribute name="Num" type="xs:positiveInteger" use="optional" default="1"/>
        <xs:attribute name="UId" type="xs:int" use="optional"/>
    </xs:complexType>

    <xs:complexType name="NewLine_T">
        <xs:attribute name="Num" type="xs:positiveInteger" use="optional" default="1"/>
        <xs:attribute name="UId" type="xs:int" use="optional"/>
    </xs:complexType>

    <xs:complexType name="Part_T">
        <xs:annotation>
            <xs:documentation>Type of part used</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:element name="Equation" type="Equation_T" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The equation of this part. This is only used for the Calculate box.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element name="TemplateValue" type="TemplateValue_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>TemplateValue represents a single template value.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="AutomaticTyped" type="AutomaticTyped_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>AutomaticTyped represents a single automatic typed.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Invisible" type="Invisible_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Invisible represents a single invisible.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Negated" type="Negated_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Negated represents a single negated.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Comment" type="Comment_T" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Comment represents a single comment.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="UId" type="xs:int" use="required">
            <xs:annotation>
                <xs:documentation>Unique identifier of the part. Started from 21.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Name of the part.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Version" type="VersionString_T" use="optional"/>
        <xs:attribute name="DisabledENO" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>Indicates whether the parts ENO is disabled.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Equation_T">
        <xs:annotation>
            <xs:documentation>The equation of this part. This is only used for the Calculate box.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string"/>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="TemplateValue_T">
        <xs:annotation>
            <xs:documentation>TemplateValue represents a single template value.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="Name" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Name of the template value.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Type" type="TemplateValueType_T" use="required">
                    <xs:annotation>
                        <xs:documentation>Type of the template value.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="UId" type="xs:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unique identifier of the template value.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="AutomaticTyped_T">
        <xs:attribute name="Name" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>The name of the automatic chosen template parameter. Not for InstructionRef</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Invisible_T">
        <xs:annotation>
            <xs:documentation>The invisible pins of this part</xs:documentation>
        </xs:annotation>
        <xs:attribute name="Name" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>The name of the invisible pin</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Negated_T">
        <xs:annotation>
            <xs:documentation>The negated pins of this part</xs:documentation>
        </xs:annotation>
        <xs:attribute name="Name" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>The name of the negated pin</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Comment_T">
        <xs:annotation>
            <xs:documentation>Comment represents a single comment.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="MultiLanguageText" type="MultiLanguageText_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>MultiLanguageText represents a single multi language text.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="Insterted" type="xs:boolean" use="optional" default="false">
            <xs:annotation>
                <xs:documentation>Denotes if the comment is at the end of the line (using //) or inside the line (using /* */)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Informative" type="xs:boolean" use="optional" default="false">
            <xs:annotation>
                <xs:documentation>Exported only with ReadOnly options, ignored during import</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="UId" type="xs:int" use="optional">
            <xs:annotation>
                <xs:documentation>Unique identifier of the comment.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="MultiLanguageText_T">
        <xs:annotation>
            <xs:documentation>MultiLanguageText represents a single multi language text.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="Lang" type="Lang_T" use="required"/>
                <xs:attribute name="UId" type="xs:int" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Call_T">
        <xs:annotation>
            <xs:documentation>Call represents a single call.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="CallInfo" type="CallInfo_T"/>
            <xs:element name="TemplateValue" type="TemplateValue_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>TemplateValue represents a single template value.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="AutomaticTyped" type="AutomaticTyped_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>AutomaticTyped represents a single automatic typed template value.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Invisible" type="Invisible_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Invisible represents a single invisible pin.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Negated" type="Negated_T" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Negated represents a single negated pin.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Comment" type="Comment_T" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Comment represents a single comment.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="UId" type="xs:int" use="required">
            <xs:annotation>
                <xs:documentation>Unique identifier of the call.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="CallInfo_T">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="Instance" type="Instance_T"/>
            <xs:element name="NamelessParameter" type="NamelessParameter_T" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Parameter" type="Parameter_T" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attribute name="Name" type="xs:string" use="optional"/>
        <xs:attribute name="BlockType" type="BlockType_TE" use="required"/>
        <xs:attribute name="UId" type="xs:int" use="optional"/>
    </xs:complexType>

    <xs:complexType name="Instance_T">
        <xs:sequence maxOccurs="unbounded">
            <xs:choice>
                <xs:element name="Component" type="Component_T"/>
                <xs:element name="AbsoluteOffset" type="AbsoluteOffset_T"/>
                <xs:element name="Address" type="AccessAddress_T"/>
            </xs:choice>
            <xs:choice minOccurs="0">
                <xs:element name="Comment" type="Comment_T"/>
                <xs:element name="Blank" type="Blank_T"/>
                <xs:element name="NewLine" type="NewLine_T"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="UId" type="xs:int"/>
        <xs:attribute name="Scope" type="Scope_TE" use="required"/>
    </xs:complexType>

    <xs:complexType name="NamelessParameter_T">
        <xs:sequence maxOccurs="unbounded">
            <xs:choice maxOccurs="unbounded">
                <xs:element name="Access" type="Access_T"/>
                <xs:choice minOccurs="0">
                    <xs:element name="Comment" type="Comment_T"/>
                    <xs:element name="Blank" type="Blank_T"/>
                    <xs:element name="NewLine" type="NewLine_T"/>
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="UId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="Parameter_T">
        <xs:sequence minOccurs="0">
            <xs:choice maxOccurs="unbounded">
                <xs:element name="Access" type="Access_T"/>
                <xs:choice minOccurs="0">
                    <xs:element name="Comment" type="Comment_T"/>
                    <xs:element name="Blank" type="Blank_T"/>
                    <xs:element name="NewLine" type="NewLine_T"/>
                </xs:choice>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string" use="required"/>
        <xs:attribute name="Section" type="SectionName_TE" use="optional"/>
        <xs:attribute name="Type" type="xs:string"/>
        <xs:attribute name="TemplateReference" type="xs:string"/>
        <xs:attribute name="Informative" type="xs:boolean" default="false"/>
        <xs:attribute name="UId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="Wires_T">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="Wire" type="Wire_T">
                <xs:annotation>
                    <xs:documentation>Wire represents a single wire.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Wire_T">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="Powerrail" type="Powerrail_T">
                <xs:annotation>
                    <xs:documentation>Powerrail represents a single powerrail.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NameCon" type="NameCon_T">
                <xs:annotation>
                    <xs:documentation>NameCon represents a single name connection.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="IdentCon" type="IdentCon_T">
                <xs:annotation>
                    <xs:documentation>IdentCon represents a single identifier connection.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Openbranch" type="Openbranch_T">
                <xs:annotation>
                    <xs:documentation>Openbranch represents a single open branch.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="OpenCon" type="OpenCon_T">
                <xs:annotation>
                    <xs:documentation>OpenCon represents a single open connection.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attribute name="UId" type="xs:int" use="required"/>
    </xs:complexType>

    <xs:complexType name="Powerrail_T"/>
    <xs:complexType name="Openbranch_T"/>
    <xs:complexType name="OpenCon_T">
        <xs:attribute name="UId" type="xs:int" use="required">
            <xs:annotation>
                <xs:documentation>Unique identifier of the object the open connection is connected to.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="IdentCon_T">
        <xs:attribute name="UId" type="xs:int" use="required"/>
    </xs:complexType>

    <xs:complexType name="NameCon_T">
        <xs:attribute name="UId" type="xs:int" use="required"/>
        <xs:attribute name="Name" type="xs:string" use="required"/>
    </xs:complexType>


</xs:schema>